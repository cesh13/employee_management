@page "/"
@page "/employees"
@using EmployeeManagementDataAccess.DataAccess
@using EmployeeManagementDataAccess.Models

@inject IEmployeeData _employeeData;

<h3>Employees</h3>

@if (employees == null)
{
    <h4>Loading...</h4>
}
else
{
    <a class="btn btn-primary mt-5 mb-4" href="/employee">Add Employee</a>
    <table class="table">
        <thead>
            <tr>
                <th>Employee ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Phone Number</th>
                <th>Zip Code</th>
                <th>Date Hired</th>
            </tr>
        </thead>
        <tbody>
            @foreach (EmployeeModel employee in employees)
            {
                <tr>
                    <td>
                        @employee.EmployeeID
                    </td>
                    <td>
                        @employee.FirstName
                    </td>
                    <td>
                        @employee.LastName
                    </td>
                    <td>
                        @employee.Phone
                    </td>
                    <td>
                        @employee.Zip
                    </td>
                    <td>
                        @employee.HireDate.ToString()
                    </td>
                    <td>
                        <button @onclick="(() => removeEmployeeHandler(employee.EmployeeID))" class="btn btn-outline-danger"><i class="oi oi-trash" aria-hidden="true"></i></button>
                        <a href="/employee/@employee.EmployeeID" class="btn btn-outline-primary"><i class="oi oi-pencil" aria-hidden="true"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public List<EmployeeModel> employees { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employees = (await _employeeData.GetAllEmployees()).ToList();

    }

    private async Task removeEmployeeHandler(int employeeID)
    {
        await _employeeData.DeleteEmployee(employeeID);
        employees = (await _employeeData.GetAllEmployees()).ToList();
        StateHasChanged();
    }
}